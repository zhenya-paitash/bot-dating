const asyncHandler = require('express-async-handler')
const User = require('../models/userModel')
const Review = require('../models/reviewModel')

// @desc      Get all reviews
// @route     GET /api/review
// @access    Private
const getReviews = asyncHandler(async (req, res) => {
  const reviews = await Review.find({}).populate('user', 'id')

  res.status(200).json({
    message: `–í –±–∞–∑–µ –Ω–∞–π–¥–µ–Ω–æ ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤ üòÉ `,
    data: reviews,
  })
})

// @desc      Create new review or update if exists
// @route     POST /api/review
// @access    Private
const createReview = asyncHandler(async (req, res) => {
  const { user, review } = req.body

  const userExist = await User.findById(user)
  if (!userExist) {
    res.status(400)
    throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚ö†Ô∏è ')
  }

  // UPDATE
  const oldReview = await Review.findOne({ user })
  if (oldReview) {
    if (oldReview.review === review) {
      res.status(400)
      throw new Error('–í—ã –ø–æ—Å—ã–ª–∞–µ—Ç–µ —Ç–æ—Ç –∂–µ –æ—Ç–∑—ã–≤ üò• ')
    }

    oldReview.review = review
    await oldReview.save()
    return res.status(200).json({
      message: `–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω üòÑ `,
      data: oldReview,
    })
  }

  const newReview = await Review.create({ user, review })
  if (!newReview) {
    res.status(400)
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ—Ç–∑—ã–≤ üò• ')
  }

  res.status(201).json({
    message: `–û—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω üòÑ `,
    data: newReview,
  })
})

module.exports = {
  getReviews,
  createReview,
}
